<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 要设置是实现接口的具体包名及类名 -->
<mapper namespace="com.example.mybatis.mapper.UserMapper">

    <resultMap id="BaseMap" type="com.example.mybatis.model.UserInfo">
        <!-- 主键映射 -->
        <id column="id" property="id"></id>
        <!-- 普通属性映射 -->
        <result column="username" property="name"></result>
        <result column="password" property="password"></result>
        <result column="photo" property="photo"></result>
        <result column="createtime" property="createtime"></result>
        <result column="updatetime" property="updatetime"></result>
        <result column="state" property="state"></result>

        <collection property="articlelist"
                    resultMap="com.example.mybatis.mapper.ArticleMapper.BaseMap"
                    columnPrefix="a_">
        </collection>
    </resultMap>

    <!-- 查询用户及用户发表的所有文章 -->
    <select id="getUserAndArticleByUid" resultMap="BaseMap">
        select u.*,a.id a_id,a.title a_title,a.content a_content,a.createtime a_createtime,a.updatetime a_updatetime
        from userinfo u left join articleinfo a on u.id=a.uid where u.id=#{uid}
    </select>

    <!-- 实现模糊查询 -->
    <select id="getListByName" resultType="com.example.mybatis.model.UserInfo">
        select * from userinfo where username like concat('%',#{username},'%')
    </select>

    <!-- 登录功能 -->
    <select id="login" resultType="com.example.mybatis.model.UserInfo">
        select * from userinfo where username='${username}' and password='${password}'
    </select>

    <!-- 登录功能 -->
<!--    <select id="login" resultType="com.example.mybatis.model.UserInfo">-->
<!--        select * from userinfo where username=#{username} and password=#{password}-->
<!--    </select>-->

    <!-- 根据全名查询用户对象(非模糊查询) -->
    <select id="getUserByFullName" resultType="com.example.mybatis.model.UserInfo">
        select * from userinfo where username='${username}'
    </select>

    <!-- 实现排序 -->
    <select id="getOrderList" resultType="com.example.mybatis.model.UserInfo">
        select * from userinfo order by createtime ${order}
    </select>
    
    <!-- 根据 id 查询用户 -->
    <select id="getUserById" resultMap="BaseMap">
        select * from userinfo where id=#{id}
    </select>

    <!-- 根据用户 id 修改用户名称 -->
    <update id="update">
        update userinfo set username=#{username} where id=#{id}
    </update>

    <!-- 根据用户 id 删除用户 -->
    <delete id="delete">
        delete from userinfo where id=#{id}
    </delete>

    <!-- 添加用户, 返回受影响的行数 -->
    <insert id="add">
        insert into userinfo(username, password, photo) values(#{username}, #{password}, #{photo})
    </insert>

    <!-- 添加用户, 返回受影响的行数和自增id -->
    <insert id="addGetId" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into userinfo(username, password, photo) values(#{username}, #{password}, #{photo})
    </insert>
    
</mapper>